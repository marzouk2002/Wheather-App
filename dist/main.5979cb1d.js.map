{"version":3,"sources":["js/API-handle.js","js/main.js"],"names":["API_KEY","getData","lookFor","promise","Promise","resolve","reject","fetch","then","res","json","data","current","sunrise","sunset","city_name","wind_dir","wind_spd","wind_cdir_full","temp","weatherDesc","weather","description","precip","catch","err","form","document","querySelector","input","currentCity","currentTempH","currentWindSpeed","currentWindDirectionA","currentWindDirectionT","unitToggle","unitMetric","unitImperial","formatDate","date","toLocaleDateString","undefined","day","month","formateTemp","Math","checked","round","formateSpeed","speed","upDateUnits","tempUnits","querySelectorAll","speedUnits","forEach","unit","innerText","setData","innerHTML","style","setProperty","addEventListener","e","preventDefault","city","value","console","log","status"],"mappings":"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","file":"main.5979cb1d.js","sourceRoot":"../src","sourcesContent":["let API_KEY = 'f428d0d3bfbf4ae8963015631405d2bf'\n\nexport function getData(lookFor) {\n    let promise = new Promise((resolve, reject) => {\n        fetch(`https://api.weatherbit.io/v2.0/current?&city=${lookFor}&key=${API_KEY}&include=minutely`)\n            .then(res => res.json())\n            .then(data => {\n                let current = data.data[0]\n                resolve({\n                    sunrise: current.sunrise,\n                    sunset: current.sunset,\n                    city_name: current.city_name,\n                    wind_dir: current.wind_dir,\n                    wind_spd: current.wind_spd * 3.6,\n                    wind_cdir_full: current.wind_cdir_full,\n                    temp: current.temp,\n                    weatherDesc: current.weather.description,\n                    precip: current.precip\n                })\n            }).catch(err => {\n                reject(err)\n            })\n    })\n    return promise\n}\n\n","import '../sass/main.scss';\nimport { getData } from './API-handle.js'\n\nconst form = document.querySelector('[data-form]')\nconst input = document.querySelector('[data-input]')\n\nconst currentCity = document.querySelector('[data-current-city]')\nconst sunrise = document.querySelector('[data-sunrise]')\nconst sunset = document.querySelector('[data-sunset]')\nconst weatherDesc = document.querySelector('[data-current-desc]')\nconst precip = document.querySelector('[data-current-pres]')\nconst currentTempH = document.querySelector('[data-current-temp]')\nconst currentWindSpeed = document.querySelector('[data-current-wind-speed]')\nconst currentWindDirectionA = document.querySelector('[data-wind-direction-arrow]')\nconst currentWindDirectionT = document.querySelector('[data-wind-direction-text]')\n\nconst unitToggle = document.querySelector('[data-unit-toggle]')\nconst unitMetric = document.querySelector('#cel')\nconst unitImperial = document.querySelector('#fah')\n\nfunction formatDate(date) {\n    return date.toLocaleDateString(undefined, {\n        day: 'numeric', month: 'long'\n    })\n}\n\nfunction formateTemp(temp) {\n    if (!unitMetric.checked) {\n        temp = (temp * 1.8) + 32\n    }\n    return Math.round(temp)\n}\n\nfunction formateSpeed(speed) {\n    if (!unitMetric.checked) {\n        speed = speed / 1.6\n    }\n    return Math.round(speed)\n}\n\nfunction upDateUnits() {\n    let tempUnits = document.querySelectorAll('[data-unit-temp]')\n    let speedUnits = document.querySelectorAll('[data-unit-speed]')\n    tempUnits.forEach(unit => unit.innerText = unitMetric.checked ? 'C' : 'F')\n    speedUnits.forEach(unit => unit.innerText = unitMetric.checked ? 'kph' : 'mph')\n}\n\nfunction setData(res) {\n    currentCity.innerHTML = res.city_name\n    weatherDesc.innerHTML = res.weatherDesc\n    sunrise.innerHTML = res.sunrise\n    sunset.innerHTML = res.sunset\n    precip.innerHTML = res.precip\n    currentTempH.innerHTML = formateTemp(res.temp)\n    currentWindSpeed.innerHTML = formateSpeed(res.wind_spd)\n    currentWindDirectionA.style.setProperty('--direction', `${res.wind_dir}deg`)\n    currentWindDirectionT.innerHTML = res.wind_cdir_full\n\n    upDateUnits()\n}\n\n\nform.addEventListener('submit', (e) => {\n    e.preventDefault()\n    let city = input.value\n    input.value = ''\n    getData(city).then(res => {\n        unitToggle.addEventListener('click', () => {\n            setData(res)\n        })\n\n        setData(res)\n    }).catch(err => console.log(err))\n})\n\ngetData('rabat').then(res => {\n    unitToggle.addEventListener('click', () => {\n        setData(res)\n    })\n    setData(res)\n})\nunitToggle.addEventListener('click', () => {\n    let status = !unitMetric.checked\n    unitMetric.checked = status\n    unitImperial.checked = !status\n})"]}